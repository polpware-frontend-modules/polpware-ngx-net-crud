{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@polpware/ngx-net-crud/lib/services/observable-crud.service.ts","ng://@polpware/ngx-net-crud/lib/services/observable-duet-table.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","ObservableCurdService","injector","this","withCredentialOnRequest","subject","BehaviorSubject","http","get","HttpClient","eventsService","GlobalEventsService","spinner","NullSpinner","prototype","handleError","error","broadcast","onDataChange","asObservable","parseCreateResponse","record","data","id","parseUpdateResponse","parseListResponse","listRequest","options","httpParams","HttpParams","k","set","listUrl","withCredentials","params","getListAsync","mySpinner","_this","getListGuard","liftIntoReject","show","toPromise","then","hide","newData","notifyList","deleteByIdRequest","delete","deleteUrl","deleteByIdAsync","deleteByIdGuard","x","notifyDelete","adaptorCreateInput","createRequest","body","tyRecord","prop","post","createUrl","createAsync","notifyCreate","adaptorUpdateInput","updateRequest","put","updateUrl","updateAsync","notifyUpdate","ObservableDuetTableService","_super","call","__","constructor","create","__extends","buildPublishData","primaryTable","dataProvider","models","map","attributes","listenToPrimaryTable","on","console","log","next","publishInitData","getById","model","getByIdAsync","Error","destroyFromTable","add"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injector } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { liftIntoReject } from '@polpware/fe-utilities';\n\nimport { toPromise } from '@polpware/ngx-rxjs';\n\nimport {\n    GlobalEventsService\n} from '@polpware/ngx-events';\n\nimport {\n    ISpinnerService,\n    NullSpinner\n} from '@polpware/ngx-spinner';\n\nimport {\n    IBaseEntity\n} from '@polpware/ngx-model';\n\nexport {\n    IBaseEntity\n} from '@polpware/ngx-model';\n\nexport abstract class ObservableCurdService<T extends IBaseEntity> {\n\n    protected subject: BehaviorSubject<Array<T>>;\n\n    protected http: HttpClient;\n    protected eventsService: GlobalEventsService;\n    protected spinner: ISpinnerService;\n\n    protected withCredentialOnRequest: boolean;\n\n    constructor(injector: Injector) {\n\n        this.withCredentialOnRequest = true;\n\n        this.subject = new BehaviorSubject([]);\n\n        this.http = injector.get(HttpClient);\n        this.eventsService = injector.get(GlobalEventsService);\n\n        this.spinner = new NullSpinner();\n    }\n\n    // *************************************\n    // abstract methods\n    // *************************************\n    protected abstract listUrl(...args: any[]): string;\n    protected abstract deleteUrl(...args: any[]): string;\n    protected abstract createUrl(...args: any[]): string;\n    protected abstract updateUrl(...args: any[]): string;\n\n    protected abstract getListGuard(): boolean;\n    protected abstract deleteByIdGuard(id: string): boolean;\n\n    protected abstract notifyList(data: Array<T>): void;\n    protected abstract notifyDelete(id: string): void;\n    protected abstract notifyCreate(record: T);\n    protected abstract notifyUpdate(record: T);\n\n    abstract getById(id: string): T;\n    abstract getByIdAsync(id: string, mySpinner: ISpinnerService): PromiseLike<T>;\n\n    protected handleError(error: HttpErrorResponse) {\n        this.eventsService.broadcast('http-error', [error]);\n    }\n\n    public onDataChange(): Observable<Array<T>> {\n        return this.subject.asObservable();\n    }\n\n    // Default methods\n    protected parseCreateResponse(record: T, data): T {\n        const id = data;\n        record.id = id;\n        return record;\n    }\n\n    protected parseUpdateResponse(record: T, data): T {\n        return record;\n    }\n\n    protected parseListResponse(data): T[] {\n        return data;\n    }\n\n    // Returns a list of entities\n    protected listRequest(options: { [key: string]: any }): Observable<T[]> {\n        let httpParams = new HttpParams();\n        for (const k in options) {\n            if (options.hasOwnProperty(k)) {\n                httpParams = httpParams.set(k, options[k]);\n            }\n        }\n\n        return this.http.get<T[]>(this.listUrl(), {\n            withCredentials: this.withCredentialOnRequest,\n            params: httpParams\n        });\n    }\n\n    getListAsync(options: { [key: string]: any }, mySpinner: ISpinnerService = null): PromiseLike<any> {\n        // In most cases, we do not need to send out a request\n        // if we already have some data.\n        if (this.getListGuard()) {\n            return liftIntoReject('not allowed');\n        }\n\n        const spinner = mySpinner || this.spinner;\n\n        spinner.show();\n        return toPromise(this.listRequest(options))\n            .then((data) => {\n                spinner.hide();\n\n                const newData = this.parseListResponse(data);\n                this.notifyList(newData);\n\n                return newData;\n            }, (error) => {\n                spinner.hide();\n\n                this.handleError(error);\n\n                return error;\n            });\n    }\n\n    // Use post instead of delete method to implement delelete ??\n    protected deleteByIdRequest(id: string): Observable<{}> {\n        return this.http.delete(this.deleteUrl(id), {\n            withCredentials: this.withCredentialOnRequest\n        });\n    }\n\n    deleteByIdAsync(id: string, mySpinner: ISpinnerService = null): PromiseLike<any> {\n\n        if (this.deleteByIdGuard(id)) {\n            return liftIntoReject('not allowed');\n        }\n\n        const spinner = mySpinner || this.spinner;\n        spinner.show();\n        return toPromise(this.deleteByIdRequest(id))\n            .then((x) => {\n                spinner.hide();\n\n                this.notifyDelete(id);\n                return id;\n            }, (error) => {\n                spinner.hide();\n\n                this.handleError(error);\n\n                return error;\n            });\n    }\n\n\n    protected adaptorCreateInput(record: T): Object {\n        return record;\n    }\n\n    protected createRequest(record: T): Observable<T> {\n        const body = {};\n        const tyRecord = this.adaptorCreateInput(record);\n        for (const prop in tyRecord) {\n            if (tyRecord.hasOwnProperty(prop)) {\n                body[prop] = tyRecord[prop];\n            }\n        }\n        return this.http.post<T>(this.createUrl(), body, {\n            withCredentials: this.withCredentialOnRequest\n        });\n    }\n\n    createAsync(record: T, mySpinner: ISpinnerService = null): PromiseLike<any> {\n\n        const spinner = mySpinner || this.spinner;\n        spinner.show();\n        return toPromise(this.createRequest(record))\n            .then((x) => {\n                spinner.hide();\n\n                // Side effects\n                record = this.parseCreateResponse(record, x);\n                this.notifyCreate(record);\n\n                return record;\n            }, (error) => {\n                spinner.hide();\n\n                this.handleError(error);\n\n                return error;\n            });\n    }\n\n    protected adaptorUpdateInput(record: T): Object {\n        return record;\n    }\n\n    protected updateRequest(record: T): Observable<T> {\n        const body = {};\n        const tyRecord = this.adaptorUpdateInput(record);\n        for (const prop in tyRecord) {\n            if (tyRecord.hasOwnProperty(prop)) {\n                body[prop] = tyRecord[prop];\n            }\n        }\n\n        return this.http.put<T>(this.updateUrl(record.id), body, {\n            withCredentials: this.withCredentialOnRequest\n        });\n    }\n\n    updateAsync(record: T, mySpinner: ISpinnerService = null): PromiseLike<any> {\n\n        const spinner = mySpinner || this.spinner;\n        spinner.show();\n        return toPromise(this.updateRequest(record))\n            .then((x) => {\n                spinner.hide();\n\n                // Side effects\n                record = this.parseUpdateResponse(record, x);\n                this.notifyUpdate(record);\n\n                return record;\n            }, (error) => {\n                spinner.hide();\n\n                // TODO: error handling\n                this.handleError(error);\n\n                return error;\n            });\n    }\n\n}\n","import { Injector } from '@angular/core';\n\nimport { IRelationalTable } from '@polpware/fe-data';\n\nimport { lift } from '@polpware/fe-utilities';\n\nimport {\n    ISpinnerService\n} from '@polpware/ngx-spinner';\n\nimport {\n    ObservableCurdService,\n    IBaseEntity\n} from './observable-crud.service';\n\nexport {\n    IBaseEntity\n} from './observable-crud.service';\n\nexport abstract class ObservableDuetTableService<T extends IBaseEntity>\n    extends ObservableCurdService<T> {\n\n    protected primaryTable: IRelationalTable;\n    protected secondaryTable: IRelationalTable;\n\n    constructor(injector: Injector) {\n        super(injector);\n    }\n\n    private buildPublishData() {\n        const models = this.primaryTable.dataProvider().models as Array<any>;\n        const data = models.map((x) => x.attributes as T);\n        return data;\n    }\n\n    protected listenToPrimaryTable() {\n        this.primaryTable.dataProvider().on('update', () => {\n            console.log('Received pimary table updates');\n            const data = this.buildPublishData();\n            this.subject.next(data);\n        });\n    }\n\n    protected publishInitData() {\n        const data = this.buildPublishData();\n        this.subject.next(data);\n    }\n\n    // Override\n    protected getListGuard(): boolean {\n        return false;\n    }\n\n    // Implement\n    getById(id: string): T {\n        const model = this.primaryTable.get(id);\n        if (model) {\n            return model.attributes as T;\n        }\n        return null;\n    }\n\n    getByIdAsync(id: string, mySpinner: ISpinnerService = null): PromiseLike<T> {\n        throw new Error('Not implemented');\n    }\n\n    // Override\n    protected deleteByIdGuard(id: string) {\n        return false;\n    }\n\n    // Override\n    protected notifyDelete(id: string) {\n        // Side effects\n        const model = this.primaryTable.get(id);\n        if (model) {\n            model.destroyFromTable();\n        }\n    }\n\n    // Override\n    protected notifyCreate(record: T) {\n        this.primaryTable.add(record);\n    }\n\n    protected notifyUpdate(record: T) {\n        // The following op basically update what we have ...\n        this.primaryTable.add(record);\n    }\n}\n"]}